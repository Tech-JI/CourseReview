# Generated by Django 5.0.8 on 2024-08-22 11:27

import django.contrib.postgres.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DistributiveRequirement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=16, unique=True)),
                (
                    "distributive_type",
                    models.CharField(
                        choices=[("WC", "World Culture"), ("DIST", "Distributive")],
                        max_length=16,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Instructor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=255, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("department", models.CharField(db_index=True, max_length=4)),
                ("number", models.IntegerField(db_index=True)),
                (
                    "subnumber",
                    models.IntegerField(blank=True, db_index=True, null=True),
                ),
                ("url", models.URLField(blank=True, max_length=400, null=True)),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("ORC", "Organization, Regulations, and Courses"),
                            ("TIMETABLE", "Academic Timetable"),
                        ],
                        max_length=16,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("difficulty_score", models.IntegerField(default=0)),
                ("quality_score", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "crosslisted_courses",
                    models.ManyToManyField(blank=True, to="web.course"),
                ),
                (
                    "distribs",
                    models.ManyToManyField(
                        blank=True, to="web.distributiverequirement"
                    ),
                ),
            ],
            options={
                "unique_together": {("department", "number", "subnumber")},
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("professor", models.CharField(db_index=True, max_length=255)),
                ("term", models.CharField(db_index=True, max_length=3)),
                ("comments", models.TextField()),
                (
                    "sentiment_labeler",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Manual", "Sentiment manually recorded"),
                            ("Classifier", "Sentiment based on classifier"),
                        ],
                        db_index=True,
                        default=None,
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "difficulty_sentiment",
                    models.FloatField(blank=True, default=None, null=True),
                ),
                (
                    "quality_sentiment",
                    models.FloatField(blank=True, default=None, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="web.course"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("confirmation_link", models.CharField(max_length=16, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "unauth_session_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=32, unique=True),
                        default=[],
                        size=None,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CourseMedian",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("section", models.IntegerField()),
                ("enrollment", models.IntegerField()),
                ("median", models.CharField(db_index=True, max_length=6)),
                ("term", models.CharField(db_index=True, max_length=4)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="web.course"
                    ),
                ),
            ],
            options={
                "unique_together": {("course", "section", "term")},
            },
        ),
        migrations.CreateModel(
            name="CourseOffering",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("term", models.CharField(db_index=True, max_length=4)),
                ("section", models.IntegerField()),
                ("period", models.CharField(db_index=True, max_length=128)),
                ("limit", models.IntegerField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("course_registration_number", models.IntegerField(null=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="web.course"
                    ),
                ),
                ("instructors", models.ManyToManyField(to="web.instructor")),
            ],
            options={
                "unique_together": {("term", "course", "section")},
            },
        ),
        migrations.CreateModel(
            name="Vote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.IntegerField(default=0)),
                (
                    "category",
                    models.CharField(
                        choices=[("quality", "Quality"), ("difficulty", "Difficulty")],
                        db_index=True,
                        max_length=16,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="web.course"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("course", "user", "category")},
            },
        ),
    ]
